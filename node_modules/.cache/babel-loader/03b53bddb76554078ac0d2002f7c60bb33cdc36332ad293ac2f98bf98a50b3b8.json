{"ast":null,"code":"import _objectSpread from\"C:/Users/hp/BiteSpeed/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useCallback,useRef}from'react';import ReactFlow,{addEdge,useNodesState,useEdgesState,Controls,Background,ReactFlowProvider}from'reactflow';import'reactflow/dist/style.css';import TextNode from'./components/TextNode';import NodesPanel from'./components/NodesPanel';import SettingsPanel from'./components/SettingsPanel';import Header from'./components/Header';import WelcomeScreen from'./components/WelcomeScreen';import FlowStats from'./components/FlowStats';import{validateFlow}from'./utils/flowValidation';// Import node types for React Flow\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const nodeTypes={textNode:TextNode};function App(){// State for nodes and edges\nconst[nodes,setNodes,onNodesChange]=useNodesState([]);const[edges,setEdges,onEdgesChange]=useEdgesState([]);// State for selected node and error message\nconst[selectedNode,setSelectedNode]=useState(null);const[errorMessage,setErrorMessage]=useState('');// React Flow instance ref\nconst reactFlowWrapper=useRef(null);const[reactFlowInstance,setReactFlowInstance]=useState(null);// Handle edge connections\nconst onConnect=useCallback(params=>setEdges(eds=>addEdge(params,eds)),[setEdges]);// Handle node selection\nconst onNodeClick=useCallback((event,node)=>{setSelectedNode(node);setErrorMessage('');// Clear any previous errors when selecting a node\n},[]);// Handle node deselection (clicking on canvas)\nconst onPaneClick=useCallback(()=>{setSelectedNode(null);setErrorMessage('');},[]);// Handle saving the flow\nconst handleSave=useCallback(()=>{const validationResult=validateFlow(nodes,edges);if(validationResult.isValid){setErrorMessage('');console.log('Flow saved successfully!',{nodes,edges});// Here you would typically send the data to your backend\n}else{setErrorMessage(validationResult.error);}},[nodes,edges]);// Handle drag over event for the canvas\nconst onDragOver=useCallback(event=>{event.preventDefault();event.dataTransfer.dropEffect='move';},[]);// Handle drop event for adding new nodes\nconst onDrop=useCallback(event=>{event.preventDefault();const reactFlowBounds=reactFlowWrapper.current.getBoundingClientRect();const type=event.dataTransfer.getData('application/reactflow');if(typeof type==='undefined'||!type){return;}const position=reactFlowInstance.project({x:event.clientX-reactFlowBounds.left,y:event.clientY-reactFlowBounds.top});const newNode={id:\"\".concat(type,\"-\").concat(Date.now()),type,position,data:{label:type==='textNode'?'New Message':'New Node',text:type==='textNode'?'Enter your message here...':''}};setNodes(nds=>[...nds,newNode]);},[reactFlowInstance,setNodes]);// Handle React Flow initialization\nconst onInit=useCallback(instance=>{setReactFlowInstance(instance);},[]);// Handle updating node data (for settings panel)\nconst onNodeDataChange=useCallback((nodeId,newData)=>{setNodes(nds=>nds.map(node=>node.id===nodeId?_objectSpread(_objectSpread({},node),{},{data:_objectSpread(_objectSpread({},node.data),newData)}):node));},[setNodes]);return/*#__PURE__*/_jsx(ReactFlowProvider,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(Header,{onSave:handleSave,nodes:nodes,edges:edges}),errorMessage&&/*#__PURE__*/_jsx(\"div\",{style:{padding:'12px 20px',backgroundColor:'#ffebee',color:'#c62828',borderBottom:'1px solid #ffcdd2',textAlign:'center',fontSize:'14px',fontWeight:'500'},children:errorMessage}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,display:'flex',position:'relative'},children:[/*#__PURE__*/_jsxs(\"div\",{ref:reactFlowWrapper,style:{flex:1,position:'relative'},children:[/*#__PURE__*/_jsxs(ReactFlow,{nodes:nodes,edges:edges,onNodesChange:onNodesChange,onEdgesChange:onEdgesChange,onConnect:onConnect,onNodeClick:onNodeClick,onPaneClick:onPaneClick,onDragOver:onDragOver,onDrop:onDrop,onInit:onInit,nodeTypes:nodeTypes,fitView:true,children:[/*#__PURE__*/_jsx(Controls,{}),/*#__PURE__*/_jsx(Background,{})]}),nodes.length===0&&/*#__PURE__*/_jsx(WelcomeScreen,{}),nodes.length>0&&/*#__PURE__*/_jsx(FlowStats,{nodes:nodes,edges:edges})]}),/*#__PURE__*/_jsx(\"div\",{style:{width:'300px',backgroundColor:'white',borderLeft:'1px solid #e0e0e0',boxShadow:'-2px 0 8px rgba(0, 0, 0, 0.1)'},children:selectedNode?/*#__PURE__*/_jsx(SettingsPanel,{node:selectedNode,onDataChange:onNodeDataChange}):/*#__PURE__*/_jsx(NodesPanel,{})})]})]})});}export default App;","map":{"version":3,"names":["React","useState","useCallback","useRef","ReactFlow","addEdge","useNodesState","useEdgesState","Controls","Background","ReactFlowProvider","TextNode","NodesPanel","SettingsPanel","Header","WelcomeScreen","FlowStats","validateFlow","jsx","_jsx","jsxs","_jsxs","nodeTypes","textNode","App","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","selectedNode","setSelectedNode","errorMessage","setErrorMessage","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","onConnect","params","eds","onNodeClick","event","node","onPaneClick","handleSave","validationResult","isValid","console","log","error","onDragOver","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","type","getData","position","project","x","clientX","left","y","clientY","top","newNode","id","concat","Date","now","data","label","text","nds","onInit","instance","onNodeDataChange","nodeId","newData","map","_objectSpread","children","className","onSave","style","padding","backgroundColor","color","borderBottom","textAlign","fontSize","fontWeight","flex","display","ref","fitView","length","width","borderLeft","boxShadow","onDataChange"],"sources":["C:/Users/hp/BiteSpeed/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\r\nimport ReactFlow, {\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n  Controls,\r\n  Background,\r\n  ReactFlowProvider,\r\n} from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\n\r\nimport TextNode from './components/TextNode';\r\nimport NodesPanel from './components/NodesPanel';\r\nimport SettingsPanel from './components/SettingsPanel';\r\nimport Header from './components/Header';\r\nimport WelcomeScreen from './components/WelcomeScreen';\r\nimport FlowStats from './components/FlowStats';\r\nimport { validateFlow } from './utils/flowValidation';\r\n\r\n// Import node types for React Flow\r\nconst nodeTypes = {\r\n  textNode: TextNode,\r\n};\r\n\r\nfunction App() {\r\n  // State for nodes and edges\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  \r\n  // State for selected node and error message\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  // React Flow instance ref\r\n  const reactFlowWrapper = useRef(null);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n\r\n  // Handle edge connections\r\n  const onConnect = useCallback(\r\n    (params) => setEdges((eds) => addEdge(params, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  // Handle node selection\r\n  const onNodeClick = useCallback((event, node) => {\r\n    setSelectedNode(node);\r\n    setErrorMessage(''); // Clear any previous errors when selecting a node\r\n  }, []);\r\n\r\n  // Handle node deselection (clicking on canvas)\r\n  const onPaneClick = useCallback(() => {\r\n    setSelectedNode(null);\r\n    setErrorMessage('');\r\n  }, []);\r\n\r\n  // Handle saving the flow\r\n  const handleSave = useCallback(() => {\r\n    const validationResult = validateFlow(nodes, edges);\r\n    if (validationResult.isValid) {\r\n      setErrorMessage('');\r\n      console.log('Flow saved successfully!', { nodes, edges });\r\n      // Here you would typically send the data to your backend\r\n    } else {\r\n      setErrorMessage(validationResult.error);\r\n    }\r\n  }, [nodes, edges]);\r\n\r\n  // Handle drag over event for the canvas\r\n  const onDragOver = useCallback((event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  }, []);\r\n\r\n  // Handle drop event for adding new nodes\r\n  const onDrop = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n\r\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n      const type = event.dataTransfer.getData('application/reactflow');\r\n\r\n      if (typeof type === 'undefined' || !type) {\r\n        return;\r\n      }\r\n\r\n      const position = reactFlowInstance.project({\r\n        x: event.clientX - reactFlowBounds.left,\r\n        y: event.clientY - reactFlowBounds.top,\r\n      });\r\n\r\n      const newNode = {\r\n        id: `${type}-${Date.now()}`,\r\n        type,\r\n        position,\r\n        data: { \r\n          label: type === 'textNode' ? 'New Message' : 'New Node',\r\n          text: type === 'textNode' ? 'Enter your message here...' : ''\r\n        },\r\n      };\r\n\r\n      setNodes((nds) => [...nds, newNode]);\r\n    },\r\n    [reactFlowInstance, setNodes]\r\n  );\r\n\r\n  // Handle React Flow initialization\r\n  const onInit = useCallback((instance) => {\r\n    setReactFlowInstance(instance);\r\n  }, []);\r\n\r\n  // Handle updating node data (for settings panel)\r\n  const onNodeDataChange = useCallback((nodeId, newData) => {\r\n    setNodes((nds) =>\r\n      nds.map((node) =>\r\n        node.id === nodeId ? { ...node, data: { ...node.data, ...newData } } : node\r\n      )\r\n    );\r\n  }, [setNodes]);\r\n\r\n  return (\r\n    <ReactFlowProvider>\r\n      <div className=\"app\">\r\n        {/* Enhanced Header */}\r\n        <Header onSave={handleSave} nodes={nodes} edges={edges} />\r\n\r\n        {/* Error Message Display */}\r\n        {errorMessage && (\r\n          <div style={{\r\n            padding: '12px 20px',\r\n            backgroundColor: '#ffebee',\r\n            color: '#c62828',\r\n            borderBottom: '1px solid #ffcdd2',\r\n            textAlign: 'center',\r\n            fontSize: '14px',\r\n            fontWeight: '500'\r\n          }}>\r\n            {errorMessage}\r\n          </div>\r\n        )}\r\n\r\n        {/* Main Content Area */}\r\n        <div style={{ flex: 1, display: 'flex', position: 'relative' }}>\r\n          {/* Flow Canvas */}\r\n          <div ref={reactFlowWrapper} style={{ flex: 1, position: 'relative' }}>\r\n            <ReactFlow\r\n              nodes={nodes}\r\n              edges={edges}\r\n              onNodesChange={onNodesChange}\r\n              onEdgesChange={onEdgesChange}\r\n              onConnect={onConnect}\r\n              onNodeClick={onNodeClick}\r\n              onPaneClick={onPaneClick}\r\n              onDragOver={onDragOver}\r\n              onDrop={onDrop}\r\n              onInit={onInit}\r\n              nodeTypes={nodeTypes}\r\n              fitView\r\n            >\r\n              <Controls />\r\n              <Background />\r\n            </ReactFlow>\r\n\r\n            {/* Welcome Screen - shown when no nodes exist */}\r\n            {nodes.length === 0 && <WelcomeScreen />}\r\n\r\n            {/* Flow Statistics - shown when nodes exist */}\r\n            {nodes.length > 0 && <FlowStats nodes={nodes} edges={edges} />}\r\n          </div>\r\n\r\n          {/* Right Panel - Nodes Panel or Settings Panel */}\r\n          <div style={{ \r\n            width: '300px', \r\n            backgroundColor: 'white', \r\n            borderLeft: '1px solid #e0e0e0',\r\n            boxShadow: '-2px 0 8px rgba(0, 0, 0, 0.1)'\r\n          }}>\r\n            {selectedNode ? (\r\n              <SettingsPanel \r\n                node={selectedNode} \r\n                onDataChange={onNodeDataChange}\r\n              />\r\n            ) : (\r\n              <NodesPanel />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ReactFlowProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}